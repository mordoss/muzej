---
const {
  backgroundColor,
  shadow,
  textPrimary,
  textSecondary,
  height,
  options,
  heading,
  light,
  price,
  index,
} = Astro.props
---

<div
  class:list={[
    {
      shadow,
    },
  ]}
>
  {
    heading && (
      <h4 class:list={[light && 'text-dark']} id={heading}>
        {heading}
      </h4>
    )
  }
  {textPrimary && <p>{textPrimary}</p>}
  {textSecondary && <p>{textSecondary}</p>}
  {
    options && (
      <ul class={index}>
        {options.map((option: string) => (
          <>
            <li class:list={[light && 'text-dark']}>â€¢ {option}</li>
            {!light && <br />}
          </>
        ))}
      </ul>
    )
  }

  {price && <p class="text-dark">{price}</p>}
</div>
<style define:vars={{ backgroundColor, height }}>
  div {
    background-color: var(--backgroundColor);
    border-radius: 0.75rem;
    height: var(--height);
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 100%;
  }

  p {
    color: var(--text-white);
    font-size: 1rem;
  }
  h4,
  li,
  a {
    color: var(--text-white);
  }
  ul {
    margin-left: 1rem;
  }
  a img {
    margin-left: 0.5rem;
  }
  a {
    font-weight: bold;
    font-size: 1.125rem;
  }
  li.text-dark,
  h4.text-dark,
  p.text-dark {
    color: var(--text-main);
  }
  a {
    color: var(--text-white);
    padding: 0.5rem 1rem;
    border: 1px solid transparent;
    border-radius: 0.5rem;
    transition: all 0.25s ease;
    width: fit-content;
  }
  a.details:hover {
    border: 1px solid var(--text-white);
  }

  @media (max-width: 768px) {
    p {
      font-size: 0.75rem;
    }
    h5 {
      font-size: 1rem;
    }
    div {
      padding: 1rem;
    }
  }
</style>
<script></script>
